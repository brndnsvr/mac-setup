# Full-Stack Developer Role
name: "Full-Stack Developer"
description: "Frontend, backend, databases, and deployment"
version: "2.0"
author: "Mac Setup Team"
last_updated: "2025-01-26"
minimum_macos: "13.0"
tags: ["web-development", "javascript", "python", "databases", "api", "frontend", "backend"]
icon: "ðŸš€"

brew_formulae:
  # Languages & Runtimes
  - name: node
    description: "JavaScript runtime"
  - name: python@3.13
    description: "Python programming language"
  - name: go
    description: "Go programming language"
    optional: true
  - name: rust
    description: "Rust programming language"
    optional: true
  
  # Package Managers
  - name: pnpm
    description: "Fast, disk space efficient package manager"
    alternatives:
      - name: yarn
        description: "Facebook's package manager"
  - name: pyenv
    description: "Python version management"
  - name: pipx
    description: "Install Python CLI tools"
  - name: uv
    description: "Fast Python package installer"
  
  # Database CLIs
  - name: postgresql@16
    description: "PostgreSQL client tools"
  - name: redis
    description: "Redis client and server"
  - name: sqlite
    description: "SQLite database"
  
  # Development Tools
  - name: docker-compose
    description: "Multi-container applications"
  - name: mkcert
    description: "Local HTTPS certificates"
  - name: ngrok
    description: "Secure tunnels to localhost"
    optional: true
  
  # API Tools
  - name: httpie
    description: "User-friendly HTTP client"
  - name: grpcurl
    description: "gRPC client"
    optional: true
  - name: websocat
    description: "WebSocket client"
    optional: true

brew_casks:
  # IDEs & Editors
  - name: cursor
    description: "AI-powered code editor"
    alternatives:
      - name: visual-studio-code
        description: "Microsoft's code editor"
      - name: webstorm
        description: "JetBrains JavaScript IDE"
        paid: true
  
  # API Development
  - name: postman
    description: "API platform"
    alternatives:
      - name: insomnia
        description: "REST/GraphQL client"
      - name: bruno
        description: "Open-source API client"
  
  # Database Tools
  - name: tableplus
    description: "Modern database GUI"
    alternatives:
      - name: dbeaver-community
        description: "Free universal database tool"
  
  # Containers
  - name: orbstack
    description: "Fast container runtime"
    alternatives:
      - name: docker
        description: "Docker Desktop"
  
  # Git GUI
  - name: github
    description: "GitHub Desktop"
  - name: fork
    description: "Fast git client"
    alternatives:
      - name: sourcetree
        description: "Free git GUI"

pipx_packages:
  - name: poetry
    description: "Python dependency management"
    alternatives:
      - name: pipenv
        description: "Python dev workflow"
  - name: black
    description: "Python code formatter"
  - name: cookiecutter
    description: "Project templates"

npm_packages:
  - name: typescript
    description: "TypeScript compiler"
  - name: ts-node
    description: "TypeScript execution"
  - name: prettier
    description: "Code formatter"
  - name: eslint
    description: "JavaScript linter"
  - name: nodemon
    description: "Auto-restart node apps"
  - name: concurrently
    description: "Run multiple commands"
  - name: serve
    description: "Static file server"
  - name: npm-check-updates
    description: "Update package.json"

python_packages:
  # Virtual environment packages
  - django           # Web framework
  - flask           # Micro web framework
  - fastapi         # Modern API framework
  - uvicorn         # ASGI server
  - pytest          # Testing framework
  - black           # Code formatter
  - ruff            # Fast Python linter

frontend_frameworks:
  # Ask which to set up
  - react
  - vue
  - angular
  - svelte
  - nextjs
  - nuxt
  - remix

databases:
  # Container-based, ask which to set up
  - postgresql
  - mysql
  - mongodb
  - redis
  - elasticsearch

aliases:
  - "alias ns='npm start'"
  - "alias nr='npm run'"
  - "alias nt='npm test'"
  - "alias py='python'"
  - "alias pip='pip3'"
  - "alias dcu='docker-compose up'"
  - "alias dcd='docker-compose down'"

role_indicators:
  commands:
    - node
    - npm
    - python
    - docker
    - psql
  files:
    - package.json
    - requirements.txt
    - docker-compose.yml
    - webpack.config.js
    - tsconfig.json
  directories:
    - node_modules
    - .git
    - src
    - public
    - api

dependencies:
  system:
    - xcode-select
    - git
  roles:
    - base-developer

post_install_notes: |
  Full-Stack Developer Setup Complete! ðŸš€
  
  Next steps:
  1. Configure your preferred frontend framework:
     - React: npx create-react-app my-app
     - Vue: npm create vue@latest
     - Next.js: npx create-next-app@latest
  
  2. Set up Python virtual environment:
     - python -m venv venv
     - source venv/bin/activate
     - pip install -r requirements.txt
  
  3. Start local databases with Docker:
     - docker-compose up -d postgres redis
  
  4. Configure VS Code/Cursor extensions:
     - Python, ESLint, Prettier, Docker
  
  5. Set up local HTTPS:
     - mkcert -install
     - mkcert localhost

common_workflows:
  create_react_app: |
    npx create-react-app my-app --template typescript
    cd my-app
    npm start
  
  create_django_project: |
    django-admin startproject myproject
    cd myproject
    python manage.py migrate
    python manage.py runserver
  
  create_fastapi_app: |
    mkdir my-api && cd my-api
    python -m venv venv
    source venv/bin/activate
    pip install fastapi uvicorn
    # Create main.py
    uvicorn main:app --reload
  
  docker_postgres: |
    docker run -d \
      --name postgres \
      -e POSTGRES_PASSWORD=postgres \
      -p 5432:5432 \
      postgres:16

health_checks:
  commands:
    - node --version
    - python --version
    - docker --version
    - psql --version
  expected_files:
    - ~/.nvm/nvm.sh
    - ~/.pyenv/version
  services:
    - "docker ps"
    - "curl localhost:3000"

estimated_install_time: "25-35 minutes"
disk_space_required: "8GB"
related_roles:
  - backend
  - frontend
  - devops-engineer